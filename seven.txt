module hexkeypad(
input clk,
input [3:0] read,
output reg [3:0] scan,
output [3:0] dispn,
output reg [6:0] disp);
reg [1:0] count=2'b00;
always@(posedge clk)
begin
count = count + 1;
end
always@(count)
begin
case(count)
2'b00: scan= 4'b0001;
2'b01: scan= 4'b0010;
2'b10: scan= 4'b0100;
2'b11: scan= 4'b1000;
default:scan=4'b0001;
endcase
end
assign dispn = 4'b1110; // use the last display
always@(scan, read)
begin
case(scan)
4'b0001: case(read)
4'b0001: disp= 7'b1111110;//0
4'b0010: disp= 7'b0110011;//4
4'b0100: disp= 7'b1111111;//8
4'b1000: disp= 7'b1001110;//C
default: disp= 7'b0000000;
endcase
4'b0010: case(read)
4'b0001: disp= 7'b0110000;//1
4'b0010: disp= 7'b1011011;//5
4'b0100: disp= 7'b1111011;//9
4'b1000: disp= 7'b0111101;//D
default: disp= 7'b0000000;
endcase
4'b0100: case(read)
4'b0001: disp= 7'b1101101;//2
4'b0010: disp= 7'b1011111;//6
4'b0100: disp= 7'b1110111;//A
4'b1000: disp= 7'b1001111;//E
default: disp= 7'b0000000;
endcase
4'b1000: case(read)
4'b0001: disp= 7'b1111001;//3
4'b0010: disp= 7'b1110000;//7
4'b0100: disp= 7'b0011111;//B
4'b1000: disp= 7'b1000111;//F
default: disp= 7'b0000000;
endcase
default: disp =7'b0000000;
endcase
end
endmodule
